
from pwn import *

p = remote("10.12.0.1", 1234)
        
p.recv("""    '##::::::::::'###::::'########:'########:'##:::::::'##:::::::'########:     ##:::::::::'## ##:::..... ##:: ##.....:: ##::::::: ##::::::: ##.....::     ##::::::::'##:. ##:::::: ##::: ##::::::: ##::::::: ##::::::: ##:::::::     ##:::::::'##:::. ##:::: ##:::: ######::: ##::::::: ##::::::: ######:::     ##::::::: #########::: ##::::: ##...:::: ##::::::: ##::::::: ##...::::     ##::::::: ##.... ##:: ##:::::: ##::::::: ##::::::: ##::::::: ##:::::::     ########: ##:::: ##: ########: ########: ########: ########: ########:    ........::..:::::..::........::........::........::........::........::    the future is here - 32bit. but it's too hard to write asm anymore, ya?    who even wants to write code for some rusty ol' Archimedes....... not I    ................ [ WHAT IF THERE WAS AN EASIER WAY ? ] ................    1. run example .LEG    2. try out your own .LEG!    3. exit    #> """)
p.recv("""    '##::::::::::'###::::'########:'########:'##:::::::'##:::::::'########:     ##:::::::::'## ##:::..... ##:: ##.....:: ##::::::: ##::::::: ##.....::     ##::::::::'##:. ##:::::: ##::: ##::::::: ##::::::: ##::::::: ##:::::::     ##:::::::'##:::. ##:::: ##:::: ######::: ##::::::: ##::::::: ######:::     ##::::::: #########::: ##::::: ##...:::: ##::::::: ##::::::: ##...::::     ##::::::: ##.... ##:: ##:::::: ##::::::: ##::::::: ##::::::: ##:::::::     ########: ##:::: ##: ########: ########: ########: ########: ########:    ........::..:::::..::........::........::........::........::........::    the future is here - 32bit. but it's too hard to write asm anymore, ya?    who even wants to write code for some rusty ol' Archimedes....... not I    ................ [ WHAT IF THERE WAS AN EASIER WAY ? ] ................    1. run example .LEG    2. try out your own .LEG!    3. exit    #> """)
p.recv("""    '##::::::::::'###::::'########:'########:'##:::::::'##:::::::'########:     ##:::::::::'## ##:::..... ##:: ##.....:: ##::::::: ##::::::: ##.....::     ##::::::::'##:. ##:::::: ##::: ##::::::: ##::::::: ##::::::: ##:::::::     ##:::::::'##:::. ##:::: ##:::: ######::: ##::::::: ##::::::: ######:::     ##::::::: #########::: ##::::: ##...:::: ##::::::: ##::::::: ##...::::     ##::::::: ##.... ##:: ##:::::: ##::::::: ##::::::: ##::::::: ##:::::::     ########: ##:::: ##: ########: ########: ########: ########: ########:    ........::..:::::..::........::........::........::........::........::    the future is here - 32bit. but it's too hard to write asm anymore, ya?    who even wants to write code for some rusty ol' Archimedes....... not I    ................ [ WHAT IF THERE WAS AN EASIER WAY ? ] ................    1. run example .LEG    2. try out your own .LEG!    3. exit    #> """)
p.recv("""    '##::::::::::'###::::'########:'########:'##:::::::'##:::::::'########:     ##:::::::::'## ##:::..... ##:: ##.....:: ##::::::: ##::::::: ##.....::     ##::::::::'##:. ##:::::: ##::: ##::::::: ##::::::: ##::::::: ##:::::::     ##:::::::'##:::. ##:::: ##:::: ######::: ##::::::: ##::::::: ######:::     ##::::::: #########::: ##::::: ##...:::: ##::::::: ##::::::: ##...::::     ##::::::: ##.... ##:: ##:::::: ##::::::: ##::::::: ##::::::: ##:::::::     ########: ##:::: ##: ########: ########: ########: ########: ########:    ........::..:::::..::........::........::........::........::........::    the future is here - 32bit. but it's too hard to write asm anymore, ya?    who even wants to write code for some rusty ol' Archimedes....... not I    ................ [ WHAT IF THERE WAS AN EASIER WAY ? ] ................    1. run example .LEG    2. try out your own .LEG!    3. exit    #> """)
p.recv("""    '##::::::::::'###::::'########:'########:'##:::::::'##:::::::'########:     ##:::::::::'## ##:::..... ##:: ##.....:: ##::::::: ##::::::: ##.....::     ##::::::::'##:. ##:::::: ##::: ##::::::: ##::::::: ##::::::: ##:::::::     ##:::::::'##:::. ##:::: ##:::: ######::: ##::::::: ##::::::: ######:::     ##::::::: #########::: ##::::: ##...:::: ##::::::: ##::::::: ##...::::     ##::::::: ##.... ##:: ##:::::: ##::::::: ##::::::: ##::::::: ##:::::::     ########: ##:::: ##: ########: ########: ########: ########: ########:    ........::..:::::..::........::........::........::........::........::    the future is here - 32bit. but it's too hard to write asm anymore, ya?    who even wants to write code for some rusty ol' Archimedes....... not I    ................ [ WHAT IF THERE WAS AN EASIER WAY ? ] ................    1. run example .LEG    2. try out your own .LEG!    3. exit    #> """)
p.recv("""    '##::::::::::'###::::'########:'########:'##:::::::'##:::::::'########:     ##:::::::::'## ##:::..... ##:: ##.....:: ##::::::: ##::::::: ##.....::     ##::::::::'##:. ##:::::: ##::: ##::::::: ##::::::: ##::::::: ##:::::::     ##:::::::'##:::. ##:::: ##:::: ######::: ##::::::: ##::::::: ######:::     ##::::::: #########::: ##::::: ##...:::: ##::::::: ##::::::: ##...::::     ##::::::: ##.... ##:: ##:::::: ##::::::: ##::::::: ##::::::: ##:::::::     ########: ##:::: ##: ########: ########: ########: ########: ########:    ........::..:::::..::........::........::........::........::........::    the future is here - 32bit. but it's too hard to write asm anymore, ya?    who even wants to write code for some rusty ol' Archimedes....... not I    ................ [ WHAT IF THERE WAS AN EASIER WAY ? ] ................    1. run example .LEG    2. try out your own .LEG!    3. exit    #> """)
p.recv("""    '##::::::::::'###::::'########:'########:'##:::::::'##:::::::'########:     ##:::::::::'## ##:::..... ##:: ##.....:: ##::::::: ##::::::: ##.....::     ##::::::::'##:. ##:::::: ##::: ##::::::: ##::::::: ##::::::: ##:::::::     ##:::::::'##:::. ##:::: ##:::: ######::: ##::::::: ##::::::: ######:::     ##::::::: #########::: ##::::: ##...:::: ##::::::: ##::::::: ##...::::     ##::::::: ##.... ##:: ##:::::: ##::::::: ##::::::: ##::::::: ##:::::::     ########: ##:::: ##: ########: ########: ########: ########: ########:    ........::..:::::..::........::........::........::........::........::    the future is here - 32bit. but it's too hard to write asm anymore, ya?    who even wants to write code for some rusty ol' Archimedes....... not I    ................ [ WHAT IF THERE WAS AN EASIER WAY ? ] ................    1. run example .LEG    2. try out your own .LEG!    3. exit    #> """)
p.recv("""    '##::::::::::'###::::'########:'########:'##:::::::'##:::::::'########:     ##:::::::::'## ##:::..... ##:: ##.....:: ##::::::: ##::::::: ##.....::     ##::::::::'##:. ##:::::: ##::: ##::::::: ##::::::: ##::::::: ##:::::::     ##:::::::'##:::. ##:::: ##:::: ######::: ##::::::: ##::::::: ######:::     ##::::::: #########::: ##::::: ##...:::: ##::::::: ##::::::: ##...::::     ##::::::: ##.... ##:: ##:::::: ##::::::: ##::::::: ##::::::: ##:::::::     ########: ##:::: ##: ########: ########: ########: ########: ########:    ........::..:::::..::........::........::........::........::........::    the future is here - 32bit. but it's too hard to write asm anymore, ya?    who even wants to write code for some rusty ol' Archimedes....... not I    ................ [ WHAT IF THERE WAS AN EASIER WAY ? ] ................    1. run example .LEG    2. try out your own .LEG!    3. exit    #> """)
p.recv("""    '##::::::::::'###::::'########:'########:'##:::::::'##:::::::'########:     ##:::::::::'## ##:::..... ##:: ##.....:: ##::::::: ##::::::: ##.....::     ##::::::::'##:. ##:::::: ##::: ##::::::: ##::::::: ##::::::: ##:::::::     ##:::::::'##:::. ##:::: ##:::: ######::: ##::::::: ##::::::: ######:::     ##::::::: #########::: ##::::: ##...:::: ##::::::: ##::::::: ##...::::     ##::::::: ##.... ##:: ##:::::: ##::::::: ##::::::: ##::::::: ##:::::::     ########: ##:::: ##: ########: ########: ########: ########: ########:    ........::..:::::..::........::........::........::........::........::    the future is here - 32bit. but it's too hard to write asm anymore, ya?    who even wants to write code for some rusty ol' Archimedes....... not I    ................ [ WHAT IF THERE WAS AN EASIER WAY ? ] ................    1. run example .LEG    2. try out your own .LEG!    3. exit    #> """)
p.recv("""Timeout!time="2024-08-11T00:11:52Z" level=error msg="forwarding signal 15 to container 0f09df5853f32d3b5772524e7db768ddb5c7ca844c115b1acd38d5097d21417c: container has already been removed"""")
p.recv("""    '##::::::::::'###::::'########:'########:'##:::::::'##:::::::'########:     ##:::::::::'## ##:::..... ##:: ##.....:: ##::::::: ##::::::: ##.....::     ##::::::::'##:. ##:::::: ##::: ##::::::: ##::::::: ##::::::: ##:::::::     ##:::::::'##:::. ##:::: ##:::: ######::: ##::::::: ##::::::: ######:::     ##::::::: #########::: ##::::: ##...:::: ##::::::: ##::::::: ##...::::     ##::::::: ##.... ##:: ##:::::: ##::::::: ##::::::: ##::::::: ##:::::::     ########: ##:::: ##: ########: ########: ########: ########: ########:    ........::..:::::..::........::........::........::........::........::    the future is here - 32bit. but it's too hard to write asm anymore, ya?    who even wants to write code for some rusty ol' Archimedes....... not I    ................ [ WHAT IF THERE WAS AN EASIER WAY ? ] ................    1. run example .LEG    2. try out your own .LEG!    3. exit    #> Timeout!time="2024-08-11T00:11:52Z" level=error msg="forwarding signal 15 to container 0f09df5853f32d3b5772524e7db768ddb5c7ca844c115b1acd38d5097d21417c: container has already been removed"""")

p.close()
